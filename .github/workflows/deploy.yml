name: Deploy to AWS ECS

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run tests
        env:
          SPRING_PROFILES_ACTIVE: test
        run: ./gradlew test

      # 테스트 리포트 업로드 단계
      - name: Save test report
        if: failure() # 테스트 실패 시에만 실행
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: build/reports/tests/test

      - name: Build JAR file
        run: |
          ./gradlew clean build

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push Docker image
        run: |
          docker build -t aendyear-back .
          docker tag aendyear-back:latest ${{ secrets.ECR_REPOSITORY_URL }}:latest
          docker push ${{ secrets.ECR_REPOSITORY_URL }}:latest

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_SERVICE_NAME }} --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
